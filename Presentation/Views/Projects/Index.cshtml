@model ProjectsViewModel
@{
    ViewData["Title"] = "Projects";
}

<div id="projects" class="project-page">
    <div class="page-header">
        <h1>Projects</h1>
        <button type="button" class="btn btn-add-project" data-type="modal" data-target="add-project-modal" onclick="toggleModal()">
            <i class="fa-solid fa-plus"></i>
            <span>Add Project</span>
        </button>
    </div>

    <div class="project-status-tabs">
        <a href="/admin/projects?status=all" class="tab @(Model.ActiveStatus == "all" ? "active" : "")">
            ALL [@Model.StatusCounts["All"]]
        </a>
        <a href="/admin/projects?status=started" class="tab @(Model.ActiveStatus == "started" ? "active" : "")">
            STARTED [@Model.StatusCounts["Started"]]
        </a>
        <a href="/admin/projects?status=completed" class="tab @(Model.ActiveStatus == "completed" ? "active" : "")">
            COMPLETED [@Model.StatusCounts["Completed"]]
        </a>
    </div>

    <section class="project-list">
        @if (Model.Projects != null && Model.Projects.Any())
        {
            @foreach (var project in Model.Projects)
            {
                @await Html.PartialAsync("_ProjectListItemPartial", project)
            }
        }
        else
        {
            <p>No projects found.</p>
        }
    </section>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

@await Html.PartialAsync("Modals/_AddProjectModalPartial", Model.AddProjectFormData)
@await Html.PartialAsync("Modals/_EditProjectModalPartial", Model.EditProjectFormData)